package br.com.leovictor.financeiro.integrationTest;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.jupiter.api.BeforeEach;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.context.annotation.Import;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import br.com.leovictor.financeiro.controller.LoginDTO;
import br.com.leovictor.financeiro.dto.CategoriaDto;
import br.com.leovictor.financeiro.dto.LancamentoDTO;
import br.com.leovictor.financeiro.dto.TokenDTO;
import br.com.leovictor.financeiro.repository.LancamentoRepository;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
@Import(br.com.leovictor.financeiro.integrationTest.AuthenticationUtil.class)
public class LancamentoControllerTest {
	@Autowired
	private TestRestTemplate testRestTemplate;
	
	@LocalServerPort
	private int port;
	
	@MockBean
	private LancamentoRepository lancamentoRepositoryMock;
	
	@Autowired
	private AuthenticationUtil util;
	
	@BeforeEach
	public void setUp() {
		util.ConfiguraMocks();
	}
	
	@Test
	public void naoDeveListarLancamentosParaUsuarioNaoAutenticado() {

		ResponseEntity<PageableResponse<LancamentoDTO>> responseEntity = testRestTemplate.exchange("/lancamentos", HttpMethod.GET, null, new ParameterizedTypeReference<PageableResponse<LancamentoDTO>>() {});
		
		assertThat(responseEntity).isNotNull();
		assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
		assertThat(responseEntity.getBody()).isNull();
	}
}
